eyJhbGciOiJIUzI1NiJ9.Y2xvbmU6CiAgZ2l0OgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICB0YWdzOiB0cnVlCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS9wZW9wbGVuZXQvdGVycmFmb3JtLWluc3RhY2x1c3RyLXByb3ZpZGVyCmJyYW5jaGVzOiBbIG1hc3RlciwgZmVhdHVyZS8qIF0KcGlwZWxpbmU6CiAgdmVyc2lvbjoKICAgIGltYWdlOiBhbHBpbmUvZ2l0CiAgICBjb21tYW5kczoKICAgICAgLSBnaXQgZGVzY3JpYmUgLS10YWdzID4gdmVyc2lvbgogIGJ1aWxkOgogICAgaW1hZ2U6IGdvbGFuZzoxLjkuMC1hbHBpbmUKICAgIGNvbW1hbmRzOgogICAgICAtIFZFUlNJT049JChjYXQgdmVyc2lvbikKICAgICAgLSBlY2hvICRWRVJTSU9OCiAgICAgIC0gZ28gdmV0IC4KICAgICAgLSBDR09fRU5BQkxFRD0wIEdPT1M9bGludXggZ28gYnVpbGQgLWluc3RhbGxzdWZmaXggY2dvIC1vIHRlcnJhZm9ybS1wcm92aWRlci1pbnN0YWNsdXN0ci12JFZFUlNJT04KICAgICAgLSB6aXAgdGVycmFmb3JtLXByb3ZpZGVyLWluc3RhY2x1c3RyLSRWRVJTSU9OLWxpbnV4LWFtZDY0LnppcCB0ZXJyYWZvcm0tcHJvdmlkZXItaW5zdGFjbHVzdHItdiRWRVJTSU9OCiAgICAgIC0gcm0gdGVycmFmb3JtLXByb3ZpZGVyLWluc3RhY2x1c3RyLXYkVkVSU0lPTgogICAgICAtIEdPT1M9ZGFyd2luIGdvIGJ1aWxkIC1vIHRlcnJhZm9ybS1wcm92aWRlci1pbnN0YWNsdXN0ci12JFZFUlNJT04KICAgICAgLSB6aXAgdGVycmFmb3JtLXByb3ZpZGVyLWluc3RhY2x1c3RyLSRWRVJTSU9OLWRhcndpbi1hbWQ2NC56aXAgdGVycmFmb3JtLXByb3ZpZGVyLWluc3RhY2x1c3RyLXYkVkVSU0lPTgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gSU5TVEFDTFVTVFJfQUNDRVNTX0tFWT0ke0lOU1RBQ0xVU1RSX0FDQ0VTU19LRVl9CiAgICAgIC0gSU5TVEFDTFVTVFJfU0VDUkVUX0tFWT0ke0lOU1RBQ0xVU1RSX1NFQ1JFVF9LRVl9CgogIHMzOgogICAgaW1hZ2U6IHBsdWdpbnMvczMKICAgIGFjbDogcHVibGljLXJlYWQKICAgIHJlZ2lvbjogInVzLWVhc3QtMSIKICAgIGJ1Y2tldDogInBlb3BsZW5ldC1jdXN0b20tdG9vbHMiCiAgICBhY2Nlc3Nfa2V5OiAke1BOX0FXU19BQ0NFU1NfS0VZX0lEfQogICAgc2VjcmV0X2tleTogJHtQTl9BV1NfU0VDUkVUX0FDQ0VTU19LRVl9CiAgICBzb3VyY2U6IHRlcnJhZm9ybS1wcm92aWRlci1pbnN0YWNsdXN0ci0qLnppcAogICAgdGFyZ2V0OiAvdGVycmFmb3JtLXByb3ZpZGVyLWluc3RhY2x1c3RyCiAgICB3aGVuOgogICAgICBsb2NhbDogZmFsc2UKICAgICAgYnJhbmNoOiBtYXN0ZXIK.GVs8OPJpIbTGmmCTsV6_7LnSqx1XbDMznCLah1jA2q0